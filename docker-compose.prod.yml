version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: formvault-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: formvault_prod
      MYSQL_USER: formvault_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - formvault-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=200
      --query-cache-type=1
      --query-cache-size=32M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: formvault-api-prod
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql+pymysql://formvault_user:${DB_PASSWORD}@database:3306/formvault_prod
      - SECRET_KEY=${SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
      - ssl_certs:/app/certs:ro
    ports:
      - "8000:8000"
    networks:
      - formvault-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: formvault-web-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl_certs:/etc/nginx/certs:ro
    networks:
      - formvault-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: formvault-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - formvault-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (for multiple backend instances)
  nginx-lb:
    image: nginx:alpine
    container_name: formvault-lb-prod
    restart: unless-stopped
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ssl_certs:/etc/nginx/certs:ro
    ports:
      - "443:443"
    networks:
      - formvault-network
    depends_on:
      - frontend
      - backend
    profiles:
      - load-balancer

volumes:
  db_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
  redis_data:
    driver: local
  ssl_certs:
    driver: local

networks:
  formvault-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16